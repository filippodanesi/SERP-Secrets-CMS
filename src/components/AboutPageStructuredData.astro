---
interface Props {
    title: string;
    seo: {
        title: string;
        description: string;
        image?: {
            src: string;
            alt: string;
        };
    };
}

const { title, seo } = Astro.props;
const pageUrl = new URL(Astro.url.pathname, Astro.site);

const structuredData = {
    '@context': 'https://schema.org',
    '@type': 'AboutPage',
    name: seo.title,
    description: seo.description,
    url: pageUrl.toString(),
    mainEntity: {
        '@type': 'Person',
        name: 'Filippo Danesi',
        jobTitle: 'SEO Specialist & AI Enthusiast',
        description: 'SEO specialist and AI enthusiast helping businesses grow their online presence through innovative, data-driven strategies.',
        sameAs: [
            'https://www.serp-secrets.com',
            'https://www.filippodanesi.it',
            'https://github.com/filippodanesi',
            'https://www.linkedin.com/in/filippodanesi/'
        ],
        knowsAbout: ['Search Engine Optimization (SEO)', 'Artificial Intelligence', 'Technical SEO', 'Digital Marketing', 'SEO Strategy'],
        image: seo.image
            ? {
                  '@type': 'ImageObject',
                  url: new URL(seo.image.src, Astro.site).toString(),
                  caption: seo.image.alt
              }
            : undefined
    },
    publisher: {
        '@type': 'Organization',
        name: 'SERP Secrets',
        url: 'https://www.serp-secrets.com',
        logo: {
            '@type': 'ImageObject',
            url: 'https://www.serp-secrets.com/logo.png'
        }
    },
    image: seo.image
        ? {
              '@type': 'ImageObject',
              url: new URL(seo.image.src, Astro.site).toString(),
              caption: seo.image.alt
          }
        : undefined
};
---

<script type="application/ld+json" set:html={JSON.stringify(structuredData)} />
