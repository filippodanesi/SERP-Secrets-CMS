---
import type { CollectionEntry } from 'astro:content';
import siteConfig from '../data/site-config';

type Props = CollectionEntry<'blog'>['data'];

const { title, excerpt, publishDate, updatedDate, image, tags, seo } = Astro.props as Props;

const pageUrl = new URL(Astro.url.pathname, Astro.site);

// Funzione per determinare la sezione dell'articolo in base ai tag
const getArticleSection = (tags: string[]) => {
    if (!tags.length) return 'Blog';
    // Usa il primo tag come sezione principale
    return siteConfig.tagDescriptions[tags[0]] 
        ? tags[0].split('-').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')
        : 'Blog';
};

const structuredData = {
    '@context': 'https://schema.org',
    '@type': 'Article',
    headline: title,
    description: excerpt || seo?.description || siteConfig.description,
    datePublished: publishDate.toISOString(),
    dateModified: updatedDate?.toISOString() || publishDate.toISOString(),
    url: pageUrl.toString(),
    mainEntityOfPage: {
        '@type': 'WebPage',
        '@id': pageUrl.toString()
    },
    image: (image || seo?.image) ? {
        '@type': 'ImageObject',
        url: (image?.src || seo?.image?.src),
        caption: (image?.alt || seo?.image?.alt || ''),
    } : {
        '@type': 'ImageObject',
        url: siteConfig.image?.src || '',
        caption: siteConfig.image?.alt || ''
    },
    author: {
        '@type': 'Person',
        '@id': `${Astro.site}#identity`,
        name: 'Filippo Danesi',
        url: Astro.site?.toString(),
        sameAs: [
            'https://www.linkedin.com/in/filippodanesi/',
            'https://github.com/filippodanesi/',
            'https://x.com/filippodanesi'
        ]
    },
    publisher: {
        '@type': 'Organization',
        name: siteConfig.title,
        description: siteConfig.description,
        logo: siteConfig.logo ? {
            '@type': 'ImageObject',
            url: siteConfig.logo.src,
            caption: siteConfig.logo.alt
        } : undefined
    },
    inLanguage: 'en', // o 'it' in base alla tua configurazione
    keywords: tags.join(', '),
    articleSection: getArticleSection(tags),
    isAccessibleForFree: true,
    copyrightYear: new Date(publishDate).getFullYear(),
    copyrightHolder: {
        '@type': 'Person',
        name: 'Filippo Danesi'
    }
};

// Aggiungi la descrizione del tag se disponibile
if (tags.length && siteConfig.tagDescriptions[tags[0]]) {
    structuredData.about = {
        '@type': 'Thing',
        name: getArticleSection(tags),
        description: siteConfig.tagDescriptions[tags[0]]
    };
}
---

<script type="application/ld+json" set:html={JSON.stringify(structuredData)} />