---
import type { CollectionEntry } from 'astro:content';
import siteConfig from '../data/site-config';

type Props = CollectionEntry<'blog'>['data'] & { rawContent?: () => string };

const { title, excerpt, publishDate, updatedDate, image, tags, seo, rawContent } = Astro.props;

const pageUrl = new URL(Astro.url.pathname, Astro.site);

const getArticleSection = (tags: string[]) => {
    if (!tags.length) return 'Blog';
    
    const primaryTag = tags[0];
    return /^[A-Z]/.test(primaryTag) 
        ? primaryTag 
        : primaryTag.split('-').map(word => word.toUpperCase()).join(' ');
};

// Funzione per contare le parole dal contenuto completo
const getWordCount = (content: string) => {
    return content
        .replace(/\s+/g, ' ')
        .replace(/[^\w\s]/g, '')
        .trim()
        .split(' ')
        .filter(word => word.length > 0)
        .length;
};

const postContent = rawContent ? rawContent() : '';
const wordCount = postContent ? getWordCount(postContent) : 0;

const structuredData = {
    '@context': 'https://schema.org',
    '@type': 'BlogPosting',
    '@id': `${pageUrl.toString()}#BlogPosting`,
    'mainEntityOfPage': {
        '@type': 'WebPage',
        '@id': pageUrl.toString()
    },
    'headline': title,
    'name': title,
    'description': excerpt || seo?.description || siteConfig.description,
    'datePublished': publishDate.toISOString(),
    'dateModified': updatedDate?.toISOString() || publishDate.toISOString(),
    'url': pageUrl.toString(),
    'isPartOf': {
        '@type': 'Blog',
        '@id': `${Astro.site}blog/`,
        'name': siteConfig.title,
        'publisher': {
            '@type': 'Person',
            '@id': `${Astro.site}#identity`,
            'name': 'Filippo Danesi'
        }
    },
    'image': (image || seo?.image) ? {
        '@type': 'ImageObject',
        '@id': `${image?.src || seo?.image?.src}`,
        'url': (image?.src || seo?.image?.src),
        'caption': (image?.alt || seo?.image?.alt || ''),
        'width': '1200',
        'height': '630'
    } : {
        '@type': 'ImageObject',
        '@id': `${siteConfig.image?.src}`,
        'url': siteConfig.image?.src || '',
        'caption': siteConfig.image?.alt || '',
        'width': '1200',
        'height': '630'
    },
    'author': {
        '@type': 'Person',
        '@id': `${Astro.site}#identity`,
        'name': 'Filippo Danesi',
        'url': Astro.site?.toString(),
        'sameAs': [
            'https://www.linkedin.com/in/filippodanesi/',
            'https://github.com/filippodanesi/',
            'https://x.com/filippodanesi'
        ]
    },
    'publisher': {
        '@type': 'Person',
        '@id': `${Astro.site}#identity`,
        'name': 'Filippo Danesi',
        'url': Astro.site?.toString(),
        'image': {
            '@type': 'ImageObject',
            '@id': `${siteConfig.image?.src}`,
            'url': siteConfig.image?.src || '',
            'width': '1200',
            'height': '630'
        }
    },
    'inLanguage': 'en',
    'keywords': tags.join(', '),
    'articleSection': getArticleSection(tags),
    'wordCount': wordCount,
    'isAccessibleForFree': true,
    'copyrightYear': new Date(publishDate).getFullYear(),
    'copyrightHolder': {
        '@type': 'Person',
        'name': 'Filippo Danesi'
    },
    'about': tags.map(tag => ({
        '@type': 'Thing',
        '@id': `${Astro.site}category/${tag.toLowerCase()}/`,
        'name': tag
    }))
};
---

<script type="application/ld+json" set:html={JSON.stringify(structuredData)} />
